[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools >= 45",
  "setuptools_scm[toml]>=6.2"
]

[project]
authors = [{"email" = "nchakrab@redhat.com", "name" = "Nilashish Chakarborty"}]
classifiers = [
  'Development Status :: 5 - Production/Stable',
  'Intended Audience :: Developers',
  'License :: OSI Approved :: Apache Software License',
  'Operating System :: OS Independent',
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: Implementation :: CPython',
  'Programming Language :: Python',
  'Topic :: Software Development :: Code Generators',
  'Topic :: Utilities'
]
description = "A CLI tool for scaffolding Ansible Content."
dynamic = ["dependencies", "optional-dependencies", "version"]
keywords = ["ansible"]
license = {text = "Apache"}
maintainers = [{"email" = "info@ansible.com", "name" = "Ansible by Red Hat"}]
name = "ansible-creator"
readme = "README.md"
requires-python = ">=3.10"

[project.scripts]
ansible-creator = "ansible_creator.cli:main"

[project.urls]
changelog = "https://github.com/ansible-community/ansible-creator/releases"
documentation = "https://ansible-creator.readthedocs.io/en/latest/"
homepage = "https://github.com/ansible-community/ansible-creator"
repository = "https://github.com/ansible-community/ansible-creator"

[tool.black]
exclude = "tests/fixtures"

# Keep this default because xml/report do not know to use load it from config file:
# data_file = ".coverage"
[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]

[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:", "pragma: no cover"]
fail_under = 93
ignore_errors = true
show_missing = true
skip_covered = true
skip_empty = true
sort = "Cover"

[tool.coverage.run]
concurrency = ["multiprocessing", "thread"]
# Do not use branch until bug is fixes:
# https://github.com/nedbat/coveragepy/issues/605
# branch = true
parallel = true
source_pkgs = ["ansible_creator"]

[tool.mypy]
exclude = 'tests/fixtures'
files = ["src", "tests"]
strict = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["pytest_ansible.molecule"]

[tool.pylint]

[tool.pylint.MASTER]
ignore-patterns = 'test_*'

[tool.pylint.format]
max-line-length = 100

[tool.pylint.master]
good-names = "i,j,k,ex,Run,_,f,fh"
ignore = [
  "_version.py" # built by setuptools_scm
]
jobs = 0
no-docstring-rgx = "__.*__"

[tool.pylint.messages_control]
disable = [
  "C0114", # missing-module-docstring
  "E0602", # undefined-variable / ruff F821
  "R0913",
  "too-few-public-methods",
  "too-many-instance-attributes",
  "too-many-locals"
]

[tool.pytest.ini_options]
addopts = "-n auto --ignore=tests/fixtures"
tmp_path_retention_policy = "failed"
verbosity_assertions = 2

[tool.ruff]
builtins = ["__"]
exclude = ["_version.py", "tests/fixtures"]
fix = true
ignore = [
]
line-length = 100
select = ["ALL"]
target-version = "py39"

[tool.ruff.flake8-pytest-style]
parametrize-values-type = "tuple"

[tool.ruff.isort]
lines-after-imports = 2 # Ensures consistency for cases when there's variable vs function/class definitions after imports
lines-between-types = 1 # Separate import/from with 1 line

[tool.ruff.per-file-ignores]
"src/ansible_creator/resources/new_collection/tests/**" = ["S101", "S602", "T201"]
# S101 Allow assert in tests
# S602 Allow shell in test
# T201 Allow print in tests
"tests/**" = ["S101", "S602", "T201"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.setuptools.dynamic]
dependencies = {file = ".config/requirements.in"}
optional-dependencies.docs = {file = [".config/requirements-docs.in"]}
optional-dependencies.test = {file = [".config/requirements-test.in"]}

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/ansible_creator/_version.py"

[tool.tomlsort]
in_place = true
sort_inline_tables = true
sort_table_keys = true
